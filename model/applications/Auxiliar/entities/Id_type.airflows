entity Auxiliar.Id_type {
    attribute Created_at {
        computed
        order: 96
        sm: 3
        type: TIMESTAMP
        xs: 12
    }
    attribute id {
        computed
        required
        type: SERIAL
    }
    attribute Name {
        basicFilter
        label
        label es_ES: "Nombre (español)"
        label en_US: "Name (spanish)"
        labelLanguage: es_ES
        length: 50
        list
        order: 1
        required
        sm: 6
        textFilter
        type: TEXT
        visible
        xs: 12
    }
    attribute Name_en {
        basicFilter
        label
        label es_ES: "Nombre (inglés)"
        label en_US: "Name (english)"
        labelLanguage: en_US
        length: 50
        list
        order: 2
        required
        sm: 6
        textFilter
        type: TEXT
        visible
        xs: 12
    }
    attribute Updated_at {
        computed
        order: 97
        sm: 3
        type: TIMESTAMP
        xs: 12
    }
    attribute Created_by {
        computed
        length: 100
        order: 98
        sm: 3
        type: TEXT
        xs: 12
    }
    attribute Updated_by {
        computed
        length: 100
        order: 99
        sm: 3
        type: TEXT
        xs: 12
    }
    attribute Search {
        order: 100
        sm: 12
        textSearch
        type: TEXT
        xs: 12
    }
    documentation: "Tipos de documentos de identificación: DNI, NIE, pasaporte… Tabla de códigos, asociado a un cliente o un proveedor. "
    exportToCSVEnabled
    icon: "recent_actors"
    key Id_type_pkey {
        attribute id
        documentation: "Primary key"
        primaryKey
        unique
    }
    key Id_type_search_index {
        attribute Search
        textSearch
    }
    label es_ES {
        plural: "Tipos de Id"
        singular: "Tipo de Id"
    }
    label en_US {
        plural: "Id types"
        singular: "Id type"
    }
    language: es_ES
    menu
    order: 50
    trigger Id_type_B0_audit_insert {
        each: ROW
        events: INSERT UPDATE DELETE
        function: Admin.audit
        moment: BEFORE
    }
    trigger Id_type_B0_search {
        each: ROW
        events: INSERT UPDATE
        function: Auxiliar.Id_type_B0_search
        moment: BEFORE
    }
}
