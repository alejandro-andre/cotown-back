entity Admin.User {
    attribute Updated_by {
        computed
        length: 100
        order: 99
        sm: 3
        type: TEXT
        xs: 12
    }
    attribute Search {
        order: 100
        sm: 12
        textSearch
        type: TEXT
        xs: 12
    }
    attribute Name {
        basicFilter
        label
        label es_ES: "Nombre y apellidos"
        label en_US: "Name"
        length: 100
        list
        order: 1
        required
        sm: 4
        textFilter
        type: TEXT
        visible
        xs: 12
    }
    attribute Email {
        basicFilter
        label es_ES: "Email"
        label en_US: "Email"
        length: 100
        list
        order: 2
        required
        sm: 4
        textFilter
        type: TEXT
        visible
        xs: 12
    }
    attribute User_name {
        computed
        label es_ES: "Usuario"
        label en_US: "User"
        length: 50
        list
        order: 3
        sm: 2
        textFilter
        type: TEXT
        visible
        xs: 12
    }
    attribute Created_at {
        computed
        order: 96
        sm: 3
        type: TIMESTAMP
        xs: 12
    }
    attribute Updated_at {
        computed
        order: 97
        sm: 3
        type: TIMESTAMP
        xs: 12
    }
    attribute Created_by {
        computed
        length: 100
        order: 98
        sm: 3
        type: TEXT
        xs: 12
    }
    attribute id {
        computed
        required
        type: SERIAL
    }
    documentation: "Usuarios de backoffice"
    exportToCSVEnabled
    icon: "people"
    key User_pkey {
        attribute id
        documentation: "Primary key"
        primaryKey
        unique
    }
    key User_search_index {
        attribute Search
        textSearch
    }
    label es_ES {
        plural: "Usuarios"
        singular: "Usuario"
    }
    label en_US {
        plural: "Users"
        singular: "User"
    }
    language: es_ES
    menu
    order: 80
    trigger User_A1_create_user {
        each: ROW
        events: INSERT
        function: Admin.User_A1_create_user
        moment: AFTER
    }
    trigger User_B1_update_user {
        each: ROW
        events: UPDATE
        function: Admin.User_B1_update_user
        moment: BEFORE
    }
    trigger User_D1_delete_user {
        each: ROW
        events: DELETE
        function: Admin.User_D1_delete_user
        moment: AFTER
    }
    trigger User_B0_audit_insert {
        each: ROW
        events: INSERT UPDATE DELETE
        function: Admin.audit
        moment: BEFORE
    }
    trigger User_B0_search {
        each: ROW
        events: INSERT UPDATE
        function: Admin.User_B0_search
        moment: BEFORE
    }
}
