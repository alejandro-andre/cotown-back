entity Marketing.Media_location {
    attribute id {
        computed
        required
        type: SERIAL
    }
    attribute Alt_en {
        basicFilter
        label es_ES: "Alt (inglés)"
        label en_US: "Alt (english)"
        labelLanguage: en_US
        length: 200
        order: 6
        sm: 6
        textFilter
        type: TEXT
        visible
        xs: 12
    }
    attribute Created_at {
        computed
        order: 96
        sm: 3
        type: TIMESTAMP
        xs: 12
    }
    attribute Updated_at {
        computed
        order: 97
        sm: 3
        type: TIMESTAMP
        xs: 12
    }
    attribute Location_id {
        label es_ES: "Localidad"
        label en_US: "Location"
        length: 100
        order: 1
        sm: 6
        type: INTEGER
        xs: 12
    }
    attribute Segment_id {
        label
        label es_ES: "Web"
        label en_US: "Web"
        order: 1
        required
        sm: 6
        type: INTEGER
        xs: 12
    }
    attribute Image {
        label es_ES: "Imagen"
        label en_US: "Image"
        list
        order: 7
        sm: 12
        type: DOCUMENT
        visible
        xs: 12
    }
    attribute Alt {
        basicFilter
        label es_ES: "Alt (español)"
        label en_US: "Alt (spanish)"
        labelLanguage: es_ES
        length: 200
        order: 5
        sm: 6
        textFilter
        type: TEXT
        visible
        xs: 12
    }
    attribute Created_by {
        computed
        length: 100
        order: 98
        sm: 3
        type: TEXT
        xs: 12
    }
    attribute Search {
        order: 100
        sm: 12
        textSearch
        type: TEXT
        xs: 12
    }
    attribute Updated_by {
        computed
        length: 100
        order: 99
        sm: 3
        type: TEXT
        xs: 12
    }
    attribute Image_type {
        basicFilter
        enumType: Auxiliar.Media_type
        label es_ES: "Tipo de imagen"
        label en_US: "Image type"
        list
        order: 2
        required
        sm: 3
        type: TEXT
        visible
        xs: 12
    }
    attribute Order {
        basicFilter
        label es_ES: "Posición"
        label en_US: "Order"
        list
        order: 3
        required
        sm: 3
        type: INTEGER
        visible
        xs: 12
    }
    attribute Name {
        basicFilter
        label
        label es_ES: "Nombre"
        label en_US: "Name"
        labelLanguage: es_ES
        length: 100
        list
        order: 4
        required
        sm: 12
        textFilter
        type: TEXT
        visible
        xs: 12
    }
    documentation: "Fotos para la web para cada ubicación. Una ubicación puede tener varias fotos."
    exportToCSVEnabled
    icon: "image"
    key Media_location_pkey {
        attribute id
        documentation: "Primary key"
        primaryKey
        unique
    }
    key Media_location_search_index {
        attribute Search
        textSearch
    }
    label es_ES {
        plural: "Imágenes"
        singular: "Imagen"
    }
    label en_US {
        plural: "Images"
        singular: "Image"
    }
    language: es_ES
    order: 200
    reference Location_id {
        attribute Location_id
        basicFilter
        documentation: "Location_pkey"
        list
        listIsVisible
        listOrder: 10
        listSm: 12
        listTab: Images
        listXs: 12
        order: 1
        referencedKey: Geo.Location.Location_pkey
        sm: 6
        visible
        xs: 12
    }
    reference Segment_id {
        attribute Segment_id
        basicFilter
        documentation: "Segment_pkey"
        list
        order: 1
        referencedKey: Auxiliar.Segment.Segment_pkey
        sm: 6
        visible
        xs: 12
    }
    trigger Media_location_B0_audit_insert {
        each: ROW
        events: INSERT UPDATE DELETE
        function: Admin.audit
        moment: BEFORE
    }
    trigger Media_location_B0_search {
        each: ROW
        events: INSERT UPDATE
        function: Marketing.Media_location_B0_search
        moment: BEFORE
    }
    trigger Media_location_imagecheck {
        each: ROW
        events: INSERT UPDATE DELETE
        function: Auxiliar.validate_image
        moment: BEFORE
    }
}
